apply from: rootProject.file("gradle-support/java-spring-boot.gradle")
apply from: rootProject.file("gradle-support/openshift-build.gradle")
apply from: rootProject.file("gradle-support/prepare-docker.gradle")

ext.dockerDir = "$project.parent.projectDir/docker/"

buildDocker.dependsOn ":docker:app-base-image:buildDocker"
buildDocker.dependsOn prepareDockerInput
buildDocker.tag = "innovateuk/"+project.name.replaceAll(/ifs-/,"")+":latest"
buildDocker.inputDir = project.file("$project.buildDir/docker")
tagDocker.imageId="innovateuk/"+project.name.replaceAll(/ifs-/,"")+":latest"

buildscript {
    ext['thymeleaf.version'] = '3.0.9.RELEASE'

    ext {
        thymeleafVersion = ext['thymeleaf.version']
    }
}

group 'innovateuk'
version project.version

apply plugin: 'idea'

def enabled = project.hasProperty('ifs.survey-service.enabled') ? project.property('ifs.survey-service.enabled').toBoolean() : false
[stop, removeContainer, createContainer, deploy, wait].each { task ->
    task.enabled = enabled
}

ext.ifsSurveyDataServiceRestBaseURL="http://survey-data-service:8080"

project.version = surveyServiceVersion
tagDocker.tag = surveyServiceVersion
osStageRemote.tag = surveyServiceVersion
tagDockerLocal.tag = surveyServiceVersion
osStageLocal.tag = surveyServiceVersion

createContainer.hostName="survey-svc"
createContainer.containerName="survey-svc"
createContainer.containerId="survey-svc"
createContainer.portBindings = ['9007:8000']

ext.serverContext = '/survey'

prepareDockerBaseInput {
    inputs.file("$rootProject.projectDir/ifs-web-service/ifs-web-core/build/classes")
    dependsOn ":ifs-web-service:ifs-web-core:build"
}

dependencies {
    compile project(':ifs-web-service:ifs-web-core')
    compile project(':ifs-resources:ifs-survey-resources')
    compile project(':ifs-rest-api-service:ifs-survey-rest-api-service')

    testCompile project (path: ":ifs-resources", configuration: 'testArtifacts')
    testCompile project (path: ":ifs-commons", configuration: 'testArtifacts')
    testCompile project (path: ":ifs-security", configuration: 'testArtifacts')
    testCompile project (path: ":ifs-web-service:ifs-web-core", configuration: 'testArtifacts')

    testCompile "net.sf.opencsv:opencsv:2.3"
}

jar.dependsOn ":ifs-web-service:gulp_default"


