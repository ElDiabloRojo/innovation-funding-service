apply from: rootProject.file("gradle-support/spring-boot.gradle")
apply from: rootProject.file("gradle-support/openshift-build.gradle")
apply from: rootProject.file("gradle-support/prepare-docker.gradle")

ext.dockerDir = "$project.parent.projectDir/docker/"

buildDocker.dependsOn ":docker:app-base-image:buildDocker"
buildDocker.dependsOn prepareDockerInput
buildDocker.tag = "innovateuk/"+project.name.replaceAll(/ifs-/,"")+":latest"
buildDocker.inputDir = project.file("$project.buildDir/docker")
tagDocker.imageId="innovateuk/"+project.name.replaceAll(/ifs-/,"")+":latest"

buildscript {
    ext['thymeleaf.version'] = '3.0.8.RELEASE'

    ext {
        thymeleafVersion = ext['thymeleaf.version']
    }
}

group 'innovateuk'
version project.version

apply plugin: 'idea'


def enabled = project.hasProperty('ifs.prototypes.enabled') ? project.property('ifs.prototypes.enabled').toBoolean() : false
[stop, removeContainer, createContainer, deploy, wait].each { task ->
    task.enabled = enabled
}

project.version = prototypesServiceVersion
tagDocker.onlyIf { (isSysIntEnv() || !isNamedEnv()) && enabled }
tagDocker.tag = prototypesServiceVersion
osStageRemote.onlyIf { (isSysIntEnv() || !isNamedEnv()) && enabled }
osStageRemote.tag = prototypesServiceVersion
tagDockerLocal.tag = prototypesServiceVersion
osStageLocal.tag = prototypesServiceVersion

createContainer.hostName="prototypes-svc"
createContainer.containerName="prototypes-svc"
createContainer.containerId="prototypes-svc"
createContainer.portBindings = ['1234:8080']

prepareDockerBaseInput {
    inputs.file("$rootProject.projectDir/ifs-web-service/ifs-web-core/build/classes")
    dependsOn ":ifs-web-service:ifs-web-core:build"
}

jar {
    baseName = 'ifs-prototypes-service'
}

dependencies {
    compile project(':ifs-web-service:ifs-web-core')

    testCompile project (path: ":ifs-resources", configuration: 'testArtifacts')
    testCompile project (path: ":ifs-commons", configuration: 'testArtifacts')
    testCompile project (path: ":ifs-web-service:ifs-web-core", configuration: 'testArtifacts')
}

processResources.dependsOn ":ifs-web-service:applyProfiles"