apply from: "gradle-support/versions.gradle"
apply from: "gradle-support/sonarqube.gradle"
apply from: "gradle-support/release.gradle"
apply from: "gradle-support/taurus.gradle"


if (project.hasProperty('ifs.zipkin.enabled') ? project.property('ifs.zipkin.enabled').toBoolean() : false) {
    apply from: "gradle-support/zipkin.gradle"
}

if (project.hasProperty('ifs.admin.enabled') ? project.property('ifs.admin.enabled').toBoolean() : false) {
    apply from: "gradle-support/spring-boot-admin.gradle"
}

allprojects {
    group 'innovateuk'
    version project.version

    apply plugin: 'idea'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'org.owasp.dependencycheck'

}

ext.ifsFinanceTotalsEnabled = project.properties['ifs.finance-totals.enabled'] ?: true

def isNamedEnv() {
    return ["sysint", "uat", "demo", "perf", "production"].contains(openshiftEnv)
}

def isNotProductionEnv() {
    !"production".equals(openshiftEnv)
}

def isSysIntEnv() {
    "sysint".equals(openshiftEnv)
}

apply from: "gradle-support/openshift-support.gradle"
apply from: "gradle-support/zipkin-support.gradle"

if (!project.hasProperty('osTestArgs')) {
    ext.osTestArgs = ""
}


configure(subprojects - project(":ifs-auth-service")) {

    apply plugin: 'io.spring.dependency-management'

}

buildscript {

    ext {
        springBootVersion = '2.0.3.RELEASE'
        springCloudVersion = 'Dalston.RELEASE'
    }

    repositories {
        jcenter()
        maven { url "http://dl.bintray.com/robfletcher/gradle-plugins" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }

    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.14.0'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE"
        classpath 'com.bluepapa32:gradle-watch-plugin:0.1.5'

        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.owasp:dependency-check-gradle:3.1.0'
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1"
    }

}


dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            // filters out any version numbers ending in rejected. e.g 1.0.0-rc.
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'pr1', 'Beta'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}


apply plugin: "com.github.hierynomus.license"


task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}

ext.zipkinEnabled = project.hasProperty('ifs.zipkin.enabled') ? project.property('ifs.zipkin.enabled').toBoolean() : false
